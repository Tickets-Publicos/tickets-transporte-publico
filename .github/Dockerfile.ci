# Imagem customizada para CI/CD
# Esta imagem contém todas as dependências necessárias para executar os testes e build
FROM node:22-alpine

# Instalar dependências do sistema necessárias
RUN apk add --no-cache \
    git \
    openssh-client \
    python3 \
    make \
    g++ \
    postgresql-client

# Instalar pnpm globalmente
RUN npm install -g pnpm@10.18

# Configurar diretório de trabalho
WORKDIR /workspace

# Copiar arquivos de configuração do workspace
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY turbo.json ./

# Copiar package.json de todos os workspaces
COPY apps/api/package.json ./apps/api/
COPY apps/web/package.json ./apps/web/
COPY packages/eslint-config/package.json ./packages/eslint-config/
COPY packages/typescript-config/package.json ./packages/typescript-config/
COPY packages/ui/package.json ./packages/ui/

# Instalar todas as dependências
RUN pnpm install --frozen-lockfile

# Copiar schema do Prisma para gerar o cliente
COPY apps/api/prisma ./apps/api/prisma

# Gerar Prisma Client
RUN cd apps/api && npx prisma generate

# Limpar cache do pnpm para reduzir tamanho da imagem
RUN pnpm store prune

# Definir variáveis de ambiente
ENV NODE_ENV=development
ENV CI=true

# Labels para metadata
LABEL description="Imagem CI/CD otimizada para tickets-transporte-publico"
LABEL version="1.0.0"

CMD ["/bin/sh"]
