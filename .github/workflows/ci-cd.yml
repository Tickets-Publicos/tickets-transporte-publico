name: CI/CD Pipeline - EC2 Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NODE_VERSION: '22'
  PNPM_VERSION: '10.17.1'

permissions:
  contents: read

jobs:
  # Job de testes e build
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: npx prisma generate
        working-directory: apps/api

      - name: Run type checking
        run: pnpm check-types

      - name: Run tests (API)
        run: pnpm --filter nest test:full

      # Nota: Testes E2E requerem PostgreSQL configurado
      # Execute localmente com: pnpm --filter nest test:e2e
      # Certifique-se de ter um banco de dados PostgreSQL rodando

      - name: Build applications
        run: pnpm build
