name: üöÄ Deploy Manual para EC2

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente de deploy'
        required: true
        default: 'production'
        type: choice
        options:
          - production
      confirm:
        description: 'Digite "DEPLOY" para confirmar'
        required: true
        type: string

env:
  NODE_VERSION: '22'
  PNPM_VERSION: '10.17.1'

permissions:
  contents: read

jobs:
  deploy-to-ec2:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Validar confirma√ß√£o
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "DEPLOY" ]; then
            echo "‚ùå Confirma√ß√£o inv√°lida. Digite 'DEPLOY' para confirmar o deploy."
            exit 1
          fi
          echo "‚úÖ Confirma√ß√£o validada. Iniciando deploy..."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT || 22 }}
          script: |
            # Navegar para o diret√≥rio do projeto
            cd /home/${{ secrets.EC2_USERNAME }}/tickets-transporte-publico
            
            # Fazer backup do .env
            #cp .env .env.backup
            
            # Atualizar c√≥digo
            #git fetch origin
            #git reset --hard origin/main
            
            # Restaurar .env
            #cp .env.backup .env
            
            # Parar containers
            docker-compose -f docker-compose.prod.yml down
            
            # Rebuild e reiniciar containers
            docker-compose -f docker-compose.prod.yml up -d --build
            
            # Executar migrations
            docker exec tickets-api npx prisma migrate deploy
            
            # Limpar recursos n√£o utilizados
            docker system prune -f
            
            # Verificar status
            docker-compose -f docker-compose.prod.yml ps
            
            echo "‚úÖ Deploy conclu√≠do com sucesso!"

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT || 22 }}
          script: |
            # Esperar containers iniciarem
            sleep 10
            
            # Verificar health da API
            curl -f http://localhost:3000/health || exit 1
            
            # Verificar health do Web
            curl -f http://localhost:3001 || exit 1
            
            echo "‚úÖ Verifica√ß√£o de sa√∫de conclu√≠da!"

      - name: Notify deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}' === 'success' ? '‚úÖ Sucesso' : '‚ùå Falhou';
            const color = '${{ job.status }}' === 'success' ? '28a745' : 'dc3545';
            
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: '${{ job.status }}',
              description: `Deploy para EC2 ${status}`,
              context: 'Deploy EC2'
            });
            
            core.notice(`Deploy para EC2 ${status}`);
