version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: tickets-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-tickets}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-tickets}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env

  # API (NestJS)
  api:
    build:
      context: .
      dockerfile: docker/app-sql/Dockerfile
    container_name: tickets-api
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/tickets}
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-3000}
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/api/node_modules
    command: pnpm --filter nest dev
    env_file:
      - .env

  # API Java (Spring Boot)
  api-java:
    build:
      context: ./apps/api-java
      dockerfile: Dockerfile
    container_name: tickets-api-java
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL:-jdbc:postgresql://postgres:5432/tickets}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD:-postgres}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO:-update}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      JAVA_OPTS: ${JAVA_OPTS:--XX:+UseContainerSupport -XX:MaxRAMPercentage=75}
    ports:
      - "8080:3000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env

  # Web (Next.js)
  web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    container_name: tickets-web
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3000
      NODE_ENV: development
    ports:
      - "3001:3001"
    depends_on:
      - api
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/apps/web/.next
    command: pnpm --filter web dev

volumes:
  postgres_data:

networks:
  default:
    name: tickets-network
